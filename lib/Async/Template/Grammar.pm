#============================================================= -*-Perl-*-
#
# Template::Event::Grammar
#
# DESCRIPTION
#   This file based on Template::Grammar ftom Template Toolkit
#   Grammar file for the Template Toolkit language containing token
#   definitions and parser state/rules tables generated by Parse::Yapp.
#
# AUTHOR
#   Andy Wardley   <abw@wardley.org>
#   Serguei Okladnikov <oklas@cpan.org> (EVENTs and some features)
#
# COPYRIGHT
#   Copyright (C) 1996-2006 Andy Wardley.  All Rights Reserved.
#   Copyright (C) 1998-2000 Canon Research Centre Europe Ltd.
#   Copyright (C) 2012-2012 Serguei Okladnikov
#
#   This module is free software; you can redistribute it and/or
#   modify it under the same terms as Perl itself.
#
# REVISION
#   $Id$
#
# IMPORTANT NOTE
#   This module is constructed from the parser/Grammar.pm.skel file by
#   running the parser/yc script.  You only need to do this if # you
#   have modified the grammar in the parser/Parser.yp file and need #
#   to-recompile it.  See the README in the 'parser' directory for
#   more information (sub-directory of the Template distribution).
#
#========================================================================

package Template::Event::Grammar;

use strict;
use warnings;

our $VERSION  = 2.25;

my (@RESERVED, %CMPOP, $LEXTABLE, $RULES, $STATES);
my ($factory, $rawstart);


#========================================================================

# Reserved words, comparison and binary operators
#========================================================================

@RESERVED = qw( 
	GET CALL SET DEFAULT INSERT INCLUDE PROCESS WRAPPER BLOCK END
	USE PLUGIN FILTER MACRO PERL RAWPERL TO STEP AND OR NOT DIV MOD
	IF UNLESS ELSE ELSIF FOR NEXT WHILE SWITCH CASE META IN
	TRY THROW CATCH FINAL LAST RETURN STOP CLEAR VIEW DEBUG
        EVENT
    );

# for historical reasons, != and == are converted to ne and eq to perform 
# stringwise comparison (mainly because it doesn't generate "non-numerical 
# comparison" warnings which != and == can) but the others (e.g. < > <= >=)
# are not converted to their stringwise equivalents.  I added 'gt' et al, 
# briefly for v2.04d and then took them out again in 2.04e.


%CMPOP = qw( 
    != ne
    == eq
    <  <
    >  >
    >= >=
    <= <=
);

#    eq eq  # add these lines to the above to 
#    lt lt  # enable the eq, lt and gt operators      
#    gt gt

#========================================================================
# Lexer Token Table
#========================================================================

# lookup table used by lexer is initialised with special-cases
$LEXTABLE = {
    'FOREACH' => 'FOR',
    'BREAK'   => 'LAST',
    '&&'      => 'AND',
    '||'      => 'OR',
    '!'       => 'NOT',
    '|'	      => 'FILTER',
    '.'       => 'DOT',
    '_'       => 'CAT',
    '..'      => 'TO',
#    ':'       => 'MACRO',
    '='       => 'ASSIGN',
    '=>'      => 'ASSIGN',
#    '->'      => 'ARROW',
    ','       => 'COMMA',
    '\\'      => 'REF',
    'and'     => 'AND',		# explicitly specified so that qw( and or
    'or'      => 'OR',		# not ) can always be used in lower case, 
    'not'     => 'NOT',		# regardless of ANYCASE flag
    'mod'     => 'MOD',
    'div'     => 'DIV',
};

# localise the temporary variables needed to complete lexer table
{ 
#    my @tokens = qw< ( ) [ ] { } ${ $ / ; : ? >;
    my @tokens = qw< ( ) [ ] { } ${ $ + / ; : ? >;
    my @cmpop  = keys %CMPOP;
#    my @binop  = qw( + - * % );              # '/' above, in @tokens
    my @binop  = qw( - * % );              # '+' and '/' above, in @tokens

    # fill lexer table, slice by slice, with reserved words and operators
    @$LEXTABLE{ @RESERVED, @cmpop, @binop, @tokens } 
	= ( @RESERVED, ('CMPOP') x @cmpop, ('BINOP') x @binop, @tokens );
}


#========================================================================
# CLASS METHODS
#========================================================================

sub new {
    my $class = shift;
    bless {
	LEXTABLE => $LEXTABLE,
	STATES   => $STATES,
	RULES    => $RULES,
    }, $class;
}

# update method to set package-scoped $factory lexical 
sub install_factory {
    my ($self, $new_factory) = @_;
    $factory = $new_factory;
}


#========================================================================
# States
#========================================================================

$STATES = [
	{#State 0
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			'EVENT' => 37,
			"\${" => 38
		},
		DEFAULT => -5,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 51,
			'template' => 53,
			'defblockname' => 14,
			'event' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 70,
			'eventblock' => 72,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'try' => 35,
			'switch' => 34,
			'directive' => 74,
			'condition' => 75
		}
	},
	{#State 1
		ACTIONS => {
			"\$" => 44,
			'LITERAL' => 77,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'setlist' => 78,
			'item' => 40,
			'assign' => 19,
			'node' => 23,
			'ident' => 76
		}
	},
	{#State 2
		DEFAULT => -137
	},
	{#State 3
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 81,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 4
		DEFAULT => -30
	},
	{#State 5
		ACTIONS => {
			";" => 82
		}
	},
	{#State 6
		DEFAULT => -44
	},
	{#State 7
		DEFAULT => -21
	},
	{#State 8
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 92,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 9
		ACTIONS => {
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"]" => 96,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 98,
			'item' => 40,
			'range' => 95,
			'node' => 23,
			'ident' => 79,
			'term' => 97,
			'lterm' => 58,
			'list' => 94
		}
	},
	{#State 10
		ACTIONS => {
			";" => 99
		}
	},
	{#State 11
		DEFAULT => -9
	},
	{#State 12
		ACTIONS => {
			";" => -27
		},
		DEFAULT => -34
	},
	{#State 13
		DEFAULT => -85,
		GOTOS => {
			'@5-1' => 100
		}
	},
	{#State 14
		ACTIONS => {
			'IDENT' => 101
		},
		DEFAULT => -94,
		GOTOS => {
			'blockargs' => 104,
			'metadata' => 103,
			'meta' => 102
		}
	},
	{#State 15
		ACTIONS => {
			'IDENT' => 101
		},
		GOTOS => {
			'metadata' => 105,
			'meta' => 102
		}
	},
	{#State 16
		ACTIONS => {
			'DOT' => 106,
			'ASSIGN' => 107
		},
		DEFAULT => -116
	},
	{#State 17
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 108,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 18
		ACTIONS => {
			'IDENT' => 109
		}
	},
	{#State 19
		DEFAULT => -156
	},
	{#State 20
		DEFAULT => -19
	},
	{#State 21
		ACTIONS => {
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 110,
			"\"" => 62,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 70,
			'item' => 40,
			'loopvar' => 112,
			'node' => 23,
			'ident' => 79,
			'term' => 111,
			'lterm' => 58
		}
	},
	{#State 22
		DEFAULT => -47
	},
	{#State 23
		DEFAULT => -134
	},
	{#State 24
		DEFAULT => -13
	},
	{#State 25
		ACTIONS => {
			"\"" => 119,
			"\$" => 116,
			'LITERAL' => 118,
			'FILENAME' => 85,
			'IDENT' => 113,
			'NUMBER' => 86,
			"\${" => 38
		},
		GOTOS => {
			'names' => 93,
			'lvalue' => 114,
			'item' => 115,
			'name' => 84,
			'filepart' => 89,
			'filename' => 87,
			'nameargs' => 120,
			'lnameargs' => 117
		}
	},
	{#State 26
		DEFAULT => -120
	},
	{#State 27
		ACTIONS => {
			"\$" => 44,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'ident' => 121
		}
	},
	{#State 28
		ACTIONS => {
			'LITERAL' => 126,
			'FILENAME' => 85,
			'IDENT' => 122,
			'NUMBER' => 86
		},
		DEFAULT => -94,
		GOTOS => {
			'blockargs' => 125,
			'filepart' => 89,
			'filename' => 124,
			'blockname' => 123,
			'metadata' => 103,
			'meta' => 102
		}
	},
	{#State 29
		DEFAULT => -50
	},
	{#State 30
		ACTIONS => {
			"\$" => 44,
			'LITERAL' => 131,
			'IDENT' => 2,
			"\${" => 38
		},
		DEFAULT => -126,
		GOTOS => {
			'params' => 130,
			'hash' => 127,
			'item' => 128,
			'param' => 129
		}
	},
	{#State 31
		DEFAULT => -32
	},
	{#State 32
		ACTIONS => {
			"\"" => 119,
			"\$" => 116,
			'LITERAL' => 118,
			'FILENAME' => 85,
			'IDENT' => 113,
			'NUMBER' => 86,
			"\${" => 38
		},
		GOTOS => {
			'names' => 93,
			'lvalue' => 114,
			'item' => 115,
			'name' => 84,
			'filepart' => 89,
			'filename' => 87,
			'nameargs' => 120,
			'lnameargs' => 132
		}
	},
	{#State 33
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			'EVENT' => 37,
			"\${" => 38
		},
		DEFAULT => -2,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 133,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'event' => 134,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 34
		DEFAULT => -29
	},
	{#State 35
		DEFAULT => -31
	},
	{#State 36
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 135,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 37
		ACTIONS => {
			"\$" => 44,
			'IDENT' => 136,
			"\${" => 38
		},
		GOTOS => {
			'eventvar' => 138,
			'item' => 40,
			'node' => 23,
			'ident' => 137
		}
	},
	{#State 38
		ACTIONS => {
			"\"" => 62,
			"\$" => 44,
			'LITERAL' => 80,
			'IDENT' => 2,
			'REF' => 27,
			'NUMBER' => 26,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 139,
			'item' => 40,
			'node' => 23,
			'ident' => 79
		}
	},
	{#State 39
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 140,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 40
		ACTIONS => {
			"(" => 141
		},
		DEFAULT => -135
	},
	{#State 41
		ACTIONS => {
			";" => 142
		}
	},
	{#State 42
		DEFAULT => -45
	},
	{#State 43
		DEFAULT => -18
	},
	{#State 44
		ACTIONS => {
			'IDENT' => 143
		}
	},
	{#State 45
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 144,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 46
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 145,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 47
		DEFAULT => -49
	},
	{#State 48
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 146,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 49
		ACTIONS => {
			'IF' => 150,
			'FILTER' => 149,
			'FOR' => 148,
			'WHILE' => 152,
			'WRAPPER' => 151,
			'UNLESS' => 147
		}
	},
	{#State 50
		DEFAULT => -46
	},
	{#State 51
		DEFAULT => -17
	},
	{#State 52
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 153,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 53
		ACTIONS => {
			'' => 154
		}
	},
	{#State 54
		DEFAULT => -4
	},
	{#State 55
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 59,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 157,
			'sterm' => 70,
			'item' => 40,
			'assign' => 156,
			'node' => 23,
			'ident' => 155,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 56
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 158,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 57
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 159,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 58
		DEFAULT => -110
	},
	{#State 59
		ACTIONS => {
			'ASSIGN' => 160
		},
		DEFAULT => -119
	},
	{#State 60
		DEFAULT => -153
	},
	{#State 61
		DEFAULT => -22
	},
	{#State 62
		DEFAULT => -183,
		GOTOS => {
			'quoted' => 161
		}
	},
	{#State 63
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 162,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 64
		ACTIONS => {
			";" => -23,
			"+" => 163,
			'CAT' => 169,
			'CMPOP' => 170,
			"?" => 164,
			'DIV' => 165,
			'MOD' => 171,
			"/" => 172,
			'AND' => 166,
			'BINOP' => 167,
			'OR' => 168
		},
		DEFAULT => -33
	},
	{#State 65
		DEFAULT => -20
	},
	{#State 66
		DEFAULT => -43
	},
	{#State 67
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 173,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 68
		DEFAULT => -16
	},
	{#State 69
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 174,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 70
		DEFAULT => -111
	},
	{#State 71
		ACTIONS => {
			"\$" => 44,
			'LITERAL' => 77,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'setlist' => 175,
			'item' => 40,
			'assign' => 19,
			'node' => 23,
			'ident' => 76
		}
	},
	{#State 72
		DEFAULT => -1
	},
	{#State 73
		ACTIONS => {
			"\$" => 44,
			'COMMA' => 177,
			'LITERAL' => 77,
			'IDENT' => 2,
			"\${" => 38
		},
		DEFAULT => -26,
		GOTOS => {
			'item' => 40,
			'assign' => 176,
			'node' => 23,
			'ident' => 76
		}
	},
	{#State 74
		DEFAULT => -15
	},
	{#State 75
		DEFAULT => -28
	},
	{#State 76
		ACTIONS => {
			'ASSIGN' => 178,
			'DOT' => 106
		}
	},
	{#State 77
		ACTIONS => {
			'ASSIGN' => 160
		}
	},
	{#State 78
		ACTIONS => {
			'COMMA' => 177,
			'LITERAL' => 77,
			'IDENT' => 2,
			"\$" => 44,
			"\${" => 38
		},
		DEFAULT => -37,
		GOTOS => {
			'item' => 40,
			'assign' => 176,
			'node' => 23,
			'ident' => 76
		}
	},
	{#State 79
		ACTIONS => {
			'DOT' => 106
		},
		DEFAULT => -116
	},
	{#State 80
		DEFAULT => -119
	},
	{#State 81
		ACTIONS => {
			'CMPOP' => 170,
			"?" => 164,
			";" => 179,
			"+" => 163,
			'MOD' => 171,
			'DIV' => 165,
			"/" => 172,
			'AND' => 166,
			'CAT' => 169,
			'BINOP' => 167,
			'OR' => 168
		}
	},
	{#State 82
		DEFAULT => -14
	},
	{#State 83
		DEFAULT => -180
	},
	{#State 84
		DEFAULT => -173
	},
	{#State 85
		DEFAULT => -179
	},
	{#State 86
		DEFAULT => -181
	},
	{#State 87
		ACTIONS => {
			'DOT' => 180
		},
		DEFAULT => -175
	},
	{#State 88
		ACTIONS => {
			"\$" => 44,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'ident' => 181
		}
	},
	{#State 89
		DEFAULT => -178
	},
	{#State 90
		DEFAULT => -176
	},
	{#State 91
		DEFAULT => -183,
		GOTOS => {
			'quoted' => 182
		}
	},
	{#State 92
		DEFAULT => -42
	},
	{#State 93
		ACTIONS => {
			"+" => 183,
			"(" => 184
		},
		DEFAULT => -163,
		GOTOS => {
			'args' => 185
		}
	},
	{#State 94
		ACTIONS => {
			"{" => 30,
			'COMMA' => 188,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"]" => 186,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 187,
			'lterm' => 58
		}
	},
	{#State 95
		ACTIONS => {
			"]" => 189
		}
	},
	{#State 96
		DEFAULT => -114
	},
	{#State 97
		DEFAULT => -123
	},
	{#State 98
		ACTIONS => {
			'TO' => 190
		},
		DEFAULT => -111
	},
	{#State 99
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 192,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 100
		ACTIONS => {
			";" => 193
		}
	},
	{#State 101
		ACTIONS => {
			'ASSIGN' => 194
		}
	},
	{#State 102
		DEFAULT => -106
	},
	{#State 103
		ACTIONS => {
			'COMMA' => 196,
			'IDENT' => 101
		},
		DEFAULT => -93,
		GOTOS => {
			'meta' => 195
		}
	},
	{#State 104
		ACTIONS => {
			";" => 197
		}
	},
	{#State 105
		ACTIONS => {
			'COMMA' => 196,
			'IDENT' => 101
		},
		DEFAULT => -24,
		GOTOS => {
			'meta' => 195
		}
	},
	{#State 106
		ACTIONS => {
			"\$" => 44,
			'IDENT' => 2,
			'NUMBER' => 199,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 198
		}
	},
	{#State 107
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'WRAPPER' => 57,
			'FOR' => 21,
			'NEXT' => 22,
			'LITERAL' => 59,
			"\"" => 62,
			'PROCESS' => 63,
			'FILTER' => 25,
			'RETURN' => 66,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 200,
			'DEFAULT' => 71,
			"{" => 30,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'term' => 60,
			'loop' => 4,
			'expr' => 202,
			'wrapper' => 47,
			'atomexpr' => 49,
			'atomdir' => 12,
			'mdir' => 201,
			'filter' => 29,
			'sterm' => 70,
			'ident' => 155,
			'perl' => 31,
			'setlist' => 73,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'directive' => 203,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 108
		DEFAULT => -40
	},
	{#State 109
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'INCLUDE' => 17,
			"(" => 205,
			'SWITCH' => 56,
			'WRAPPER' => 57,
			'FOR' => 21,
			'NEXT' => 22,
			'LITERAL' => 59,
			"\"" => 62,
			'PROCESS' => 63,
			'FILTER' => 25,
			'RETURN' => 66,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 200,
			'DEFAULT' => 71,
			"{" => 30,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'term' => 60,
			'loop' => 4,
			'expr' => 206,
			'wrapper' => 47,
			'atomexpr' => 49,
			'atomdir' => 12,
			'mdir' => 204,
			'filter' => 29,
			'sterm' => 70,
			'ident' => 155,
			'perl' => 31,
			'setlist' => 73,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'directive' => 203,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 110
		ACTIONS => {
			'IN' => 208,
			'ASSIGN' => 207
		},
		DEFAULT => -137
	},
	{#State 111
		DEFAULT => -163,
		GOTOS => {
			'args' => 209
		}
	},
	{#State 112
		ACTIONS => {
			";" => 210
		}
	},
	{#State 113
		ACTIONS => {
			'ASSIGN' => -137
		},
		DEFAULT => -180
	},
	{#State 114
		ACTIONS => {
			'ASSIGN' => 211
		}
	},
	{#State 115
		DEFAULT => -166
	},
	{#State 116
		ACTIONS => {
			"\$" => 44,
			'IDENT' => 212,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'ident' => 181
		}
	},
	{#State 117
		ACTIONS => {
			";" => 213
		}
	},
	{#State 118
		ACTIONS => {
			'ASSIGN' => -168
		},
		DEFAULT => -176
	},
	{#State 119
		DEFAULT => -183,
		GOTOS => {
			'quoted' => 214
		}
	},
	{#State 120
		DEFAULT => -165
	},
	{#State 121
		ACTIONS => {
			'DOT' => 106
		},
		DEFAULT => -117
	},
	{#State 122
		ACTIONS => {
			'ASSIGN' => 194
		},
		DEFAULT => -180
	},
	{#State 123
		DEFAULT => -90
	},
	{#State 124
		ACTIONS => {
			'DOT' => 180
		},
		DEFAULT => -91
	},
	{#State 125
		ACTIONS => {
			";" => 215
		}
	},
	{#State 126
		DEFAULT => -92
	},
	{#State 127
		ACTIONS => {
			"}" => 216
		}
	},
	{#State 128
		ACTIONS => {
			'ASSIGN' => 217
		}
	},
	{#State 129
		DEFAULT => -129
	},
	{#State 130
		ACTIONS => {
			"\$" => 44,
			'COMMA' => 219,
			'LITERAL' => 131,
			'IDENT' => 2,
			"\${" => 38
		},
		DEFAULT => -125,
		GOTOS => {
			'item' => 128,
			'param' => 218
		}
	},
	{#State 131
		ACTIONS => {
			'ASSIGN' => 220
		}
	},
	{#State 132
		DEFAULT => -80
	},
	{#State 133
		DEFAULT => -8
	},
	{#State 134
		DEFAULT => -3
	},
	{#State 135
		ACTIONS => {
			";" => 221
		}
	},
	{#State 136
		ACTIONS => {
			'ASSIGN' => 222
		},
		DEFAULT => -137
	},
	{#State 137
		ACTIONS => {
			'DOT' => 106
		},
		DEFAULT => -11
	},
	{#State 138
		ACTIONS => {
			";" => 223
		}
	},
	{#State 139
		ACTIONS => {
			"}" => 224
		}
	},
	{#State 140
		ACTIONS => {
			'DIV' => 165,
			'BINOP' => 167,
			"+" => 163,
			'CAT' => 169,
			'CMPOP' => 170,
			'MOD' => 171,
			"/" => 172
		},
		DEFAULT => -149
	},
	{#State 141
		DEFAULT => -163,
		GOTOS => {
			'args' => 225
		}
	},
	{#State 142
		DEFAULT => -83,
		GOTOS => {
			'@4-2' => 226
		}
	},
	{#State 143
		DEFAULT => -139
	},
	{#State 144
		ACTIONS => {
			'CMPOP' => 170,
			"?" => 164,
			";" => 227,
			"+" => 163,
			'MOD' => 171,
			'DIV' => 165,
			"/" => 172,
			'AND' => 166,
			'CAT' => 169,
			'BINOP' => 167,
			'OR' => 168
		}
	},
	{#State 145
		ACTIONS => {
			"+" => 163,
			'CAT' => 169,
			'CMPOP' => 170,
			"?" => 164,
			'DIV' => 165,
			'MOD' => 171,
			"/" => 172,
			'AND' => 166,
			'BINOP' => 167,
			'OR' => 168
		},
		DEFAULT => -36
	},
	{#State 146
		ACTIONS => {
			"+" => 163,
			'CAT' => 169,
			'CMPOP' => 170,
			"?" => 164,
			'DIV' => 165,
			'MOD' => 171,
			"/" => 172,
			'AND' => 166,
			'BINOP' => 167,
			'OR' => 168
		},
		DEFAULT => -35
	},
	{#State 147
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 228,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 148
		ACTIONS => {
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 110,
			"\"" => 62,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 70,
			'item' => 40,
			'loopvar' => 229,
			'node' => 23,
			'ident' => 79,
			'term' => 111,
			'lterm' => 58
		}
	},
	{#State 149
		ACTIONS => {
			"\"" => 119,
			"\$" => 116,
			'LITERAL' => 118,
			'FILENAME' => 85,
			'IDENT' => 113,
			'NUMBER' => 86,
			"\${" => 38
		},
		GOTOS => {
			'names' => 93,
			'lvalue' => 114,
			'item' => 115,
			'name' => 84,
			'filepart' => 89,
			'filename' => 87,
			'nameargs' => 120,
			'lnameargs' => 230
		}
	},
	{#State 150
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 231,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 151
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 232,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 152
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 233,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 153
		DEFAULT => -48
	},
	{#State 154
		DEFAULT => 0
	},
	{#State 155
		ACTIONS => {
			'DOT' => 106,
			'ASSIGN' => 178
		},
		DEFAULT => -116
	},
	{#State 156
		ACTIONS => {
			")" => 234
		}
	},
	{#State 157
		ACTIONS => {
			'CMPOP' => 170,
			"?" => 164,
			"+" => 163,
			'MOD' => 171,
			'DIV' => 165,
			"/" => 172,
			'AND' => 166,
			'CAT' => 169,
			'BINOP' => 167,
			")" => 235,
			'OR' => 168
		}
	},
	{#State 158
		ACTIONS => {
			'CMPOP' => 170,
			"?" => 164,
			";" => 236,
			"+" => 163,
			'MOD' => 171,
			'DIV' => 165,
			"/" => 172,
			'AND' => 166,
			'CAT' => 169,
			'BINOP' => 167,
			'OR' => 168
		}
	},
	{#State 159
		ACTIONS => {
			";" => 237
		}
	},
	{#State 160
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 238,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 161
		ACTIONS => {
			"\"" => 243,
			'TEXT' => 240,
			";" => 242,
			"\$" => 44,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'ident' => 239,
			'quotable' => 241
		}
	},
	{#State 162
		DEFAULT => -41
	},
	{#State 163
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 244,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 164
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 245,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 165
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 246,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 166
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 247,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 167
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 248,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 168
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 249,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 169
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 250,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 170
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 251,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 171
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 252,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 172
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 253,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 173
		DEFAULT => -39
	},
	{#State 174
		ACTIONS => {
			'CMPOP' => 170,
			"?" => 164,
			";" => 254,
			"+" => 163,
			'MOD' => 171,
			'DIV' => 165,
			"/" => 172,
			'AND' => 166,
			'CAT' => 169,
			'BINOP' => 167,
			'OR' => 168
		}
	},
	{#State 175
		ACTIONS => {
			'COMMA' => 177,
			'LITERAL' => 77,
			'IDENT' => 2,
			"\$" => 44,
			"\${" => 38
		},
		DEFAULT => -38,
		GOTOS => {
			'item' => 40,
			'assign' => 176,
			'node' => 23,
			'ident' => 76
		}
	},
	{#State 176
		DEFAULT => -154
	},
	{#State 177
		DEFAULT => -155
	},
	{#State 178
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 255,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 179
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 256,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 180
		ACTIONS => {
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 257
		}
	},
	{#State 181
		ACTIONS => {
			'DOT' => 106
		},
		DEFAULT => -163,
		GOTOS => {
			'args' => 258
		}
	},
	{#State 182
		ACTIONS => {
			"\"" => 259,
			'TEXT' => 240,
			";" => 242,
			"\$" => 44,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'ident' => 239,
			'quotable' => 241
		}
	},
	{#State 183
		ACTIONS => {
			"\"" => 91,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'filename' => 87,
			'name' => 260
		}
	},
	{#State 184
		DEFAULT => -163,
		GOTOS => {
			'args' => 261
		}
	},
	{#State 185
		ACTIONS => {
			'NOT' => 39,
			'LITERAL' => 265,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"{" => 30,
			'COMMA' => 267,
			"(" => 55,
			"\${" => 38
		},
		DEFAULT => -170,
		GOTOS => {
			'expr' => 266,
			'sterm' => 70,
			'item' => 263,
			'param' => 264,
			'node' => 23,
			'ident' => 262,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 186
		DEFAULT => -112
	},
	{#State 187
		DEFAULT => -121
	},
	{#State 188
		DEFAULT => -122
	},
	{#State 189
		DEFAULT => -113
	},
	{#State 190
		ACTIONS => {
			"\"" => 62,
			"\$" => 44,
			'LITERAL' => 80,
			'IDENT' => 2,
			'REF' => 27,
			'NUMBER' => 26,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 268,
			'item' => 40,
			'node' => 23,
			'ident' => 79
		}
	},
	{#State 191
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -6,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 133,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 192
		ACTIONS => {
			'FINAL' => 269,
			'CATCH' => 271
		},
		DEFAULT => -79,
		GOTOS => {
			'final' => 270
		}
	},
	{#State 193
		ACTIONS => {
			'TEXT' => 272
		}
	},
	{#State 194
		ACTIONS => {
			"\"" => 275,
			'LITERAL' => 274,
			'NUMBER' => 273
		}
	},
	{#State 195
		DEFAULT => -104
	},
	{#State 196
		DEFAULT => -105
	},
	{#State 197
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			'EVENT' => 37,
			"\${" => 38
		},
		DEFAULT => -5,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 51,
			'template' => 276,
			'defblockname' => 14,
			'event' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 70,
			'eventblock' => 72,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'condition' => 75
		}
	},
	{#State 198
		DEFAULT => -132
	},
	{#State 199
		DEFAULT => -133
	},
	{#State 200
		ACTIONS => {
			";" => 277
		}
	},
	{#State 201
		DEFAULT => -96
	},
	{#State 202
		ACTIONS => {
			";" => -157,
			"+" => 163,
			'LITERAL' => -157,
			'IDENT' => -157,
			'CAT' => 169,
			"\$" => -157,
			'CMPOP' => 170,
			"?" => 164,
			'DIV' => 165,
			'MOD' => 171,
			'COMMA' => -157,
			"/" => 172,
			'AND' => 166,
			'BINOP' => 167,
			'OR' => 168,
			"\${" => -157
		},
		DEFAULT => -33
	},
	{#State 203
		DEFAULT => -99
	},
	{#State 204
		DEFAULT => -98
	},
	{#State 205
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 59,
			'IDENT' => 278,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 157,
			'sterm' => 70,
			'item' => 40,
			'assign' => 156,
			'margs' => 279,
			'node' => 23,
			'ident' => 155,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 206
		ACTIONS => {
			"+" => 163,
			'CAT' => 169,
			'CMPOP' => 170,
			"?" => 164,
			'DIV' => 165,
			'MOD' => 171,
			"/" => 172,
			'AND' => 166,
			'BINOP' => 167,
			'OR' => 168
		},
		DEFAULT => -33
	},
	{#State 207
		ACTIONS => {
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 280,
			'lterm' => 58
		}
	},
	{#State 208
		ACTIONS => {
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 281,
			'lterm' => 58
		}
	},
	{#State 209
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'COMMA' => 267,
			'LITERAL' => 265,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		DEFAULT => -71,
		GOTOS => {
			'expr' => 266,
			'sterm' => 70,
			'item' => 263,
			'param' => 264,
			'node' => 23,
			'ident' => 262,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 210
		DEFAULT => -63,
		GOTOS => {
			'@1-3' => 282
		}
	},
	{#State 211
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 283,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 212
		ACTIONS => {
			'ASSIGN' => -139
		},
		DEFAULT => -137
	},
	{#State 213
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 284,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 214
		ACTIONS => {
			"\"" => 285,
			'TEXT' => 240,
			";" => 242,
			"\$" => 44,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'ident' => 239,
			'quotable' => 241
		}
	},
	{#State 215
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 286,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 216
		DEFAULT => -115
	},
	{#State 217
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 287,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 218
		DEFAULT => -127
	},
	{#State 219
		DEFAULT => -128
	},
	{#State 220
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 288,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 221
		DEFAULT => -81,
		GOTOS => {
			'@3-3' => 289
		}
	},
	{#State 222
		ACTIONS => {
			"\$" => 44,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'ident' => 290
		}
	},
	{#State 223
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			'EVENT' => 37,
			"\${" => 38
		},
		DEFAULT => -5,
		GOTOS => {
			'item' => 40,
			'loop' => 4,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'atomdir' => 12,
			'anonblock' => 51,
			'template' => 291,
			'defblockname' => 14,
			'event' => 54,
			'ident' => 16,
			'assign' => 19,
			'macro' => 20,
			'lterm' => 58,
			'node' => 23,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 29,
			'sterm' => 70,
			'eventblock' => 72,
			'perl' => 31,
			'chunks' => 33,
			'setlist' => 73,
			'switch' => 34,
			'try' => 35,
			'directive' => 74,
			'condition' => 75
		}
	},
	{#State 224
		DEFAULT => -138
	},
	{#State 225
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'COMMA' => 267,
			'LITERAL' => 265,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			")" => 292,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 266,
			'sterm' => 70,
			'item' => 263,
			'param' => 264,
			'node' => 23,
			'ident' => 262,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 226
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 293,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 227
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 294,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 228
		ACTIONS => {
			'CMPOP' => 170,
			"?" => 164,
			"+" => 163,
			'MOD' => 171,
			'DIV' => 165,
			"/" => 172,
			'AND' => 166,
			'CAT' => 169,
			'BINOP' => 167,
			'OR' => 168
		},
		DEFAULT => -54
	},
	{#State 229
		DEFAULT => -65
	},
	{#State 230
		DEFAULT => -88
	},
	{#State 231
		ACTIONS => {
			'CMPOP' => 170,
			"?" => 164,
			"+" => 163,
			'MOD' => 171,
			'DIV' => 165,
			"/" => 172,
			'AND' => 166,
			'CAT' => 169,
			'BINOP' => 167,
			'OR' => 168
		},
		DEFAULT => -52
	},
	{#State 232
		DEFAULT => -73
	},
	{#State 233
		ACTIONS => {
			'CMPOP' => 170,
			"?" => 164,
			"+" => 163,
			'MOD' => 171,
			'DIV' => 165,
			"/" => 172,
			'AND' => 166,
			'CAT' => 169,
			'BINOP' => 167,
			'OR' => 168
		},
		DEFAULT => -68
	},
	{#State 234
		DEFAULT => -151
	},
	{#State 235
		DEFAULT => -152
	},
	{#State 236
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 295,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 237
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 296,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 238
		ACTIONS => {
			"+" => 163,
			'CAT' => 169,
			'CMPOP' => 170,
			"?" => 164,
			'DIV' => 165,
			'MOD' => 171,
			"/" => 172,
			'AND' => 166,
			'BINOP' => 167,
			'OR' => 168
		},
		DEFAULT => -158
	},
	{#State 239
		ACTIONS => {
			'DOT' => 106
		},
		DEFAULT => -184
	},
	{#State 240
		DEFAULT => -185
	},
	{#State 241
		DEFAULT => -182
	},
	{#State 242
		DEFAULT => -186
	},
	{#State 243
		DEFAULT => -118
	},
	{#State 244
		ACTIONS => {
			'DIV' => 165,
			'MOD' => 171,
			"/" => 172
		},
		DEFAULT => -142
	},
	{#State 245
		ACTIONS => {
			":" => 297,
			'CMPOP' => 170,
			"?" => 164,
			"+" => 163,
			'MOD' => 171,
			'DIV' => 165,
			"/" => 172,
			'AND' => 166,
			'CAT' => 169,
			'BINOP' => 167,
			'OR' => 168
		}
	},
	{#State 246
		ACTIONS => {
			'MOD' => 171
		},
		DEFAULT => -143
	},
	{#State 247
		ACTIONS => {
			'DIV' => 165,
			'BINOP' => 167,
			"+" => 163,
			'CAT' => 169,
			'CMPOP' => 170,
			'MOD' => 171,
			"/" => 172
		},
		DEFAULT => -147
	},
	{#State 248
		ACTIONS => {
			'DIV' => 165,
			"+" => 163,
			'MOD' => 171,
			"/" => 172
		},
		DEFAULT => -140
	},
	{#State 249
		ACTIONS => {
			'DIV' => 165,
			'BINOP' => 167,
			"+" => 163,
			'CAT' => 169,
			'CMPOP' => 170,
			'MOD' => 171,
			"/" => 172
		},
		DEFAULT => -148
	},
	{#State 250
		ACTIONS => {
			'DIV' => 165,
			'BINOP' => 167,
			"+" => 163,
			'CMPOP' => 170,
			'MOD' => 171,
			"/" => 172
		},
		DEFAULT => -146
	},
	{#State 251
		ACTIONS => {
			'DIV' => 165,
			'BINOP' => 167,
			"+" => 163,
			'MOD' => 171,
			"/" => 172
		},
		DEFAULT => -145
	},
	{#State 252
		DEFAULT => -144
	},
	{#State 253
		ACTIONS => {
			'DIV' => 165,
			'MOD' => 171
		},
		DEFAULT => -141
	},
	{#State 254
		DEFAULT => -66,
		GOTOS => {
			'@2-3' => 298
		}
	},
	{#State 255
		ACTIONS => {
			"+" => 163,
			'CAT' => 169,
			'CMPOP' => 170,
			"?" => 164,
			'DIV' => 165,
			'MOD' => 171,
			"/" => 172,
			'AND' => 166,
			'BINOP' => 167,
			'OR' => 168
		},
		DEFAULT => -157
	},
	{#State 256
		ACTIONS => {
			'ELSIF' => 301,
			'ELSE' => 299
		},
		DEFAULT => -57,
		GOTOS => {
			'else' => 300
		}
	},
	{#State 257
		DEFAULT => -177
	},
	{#State 258
		ACTIONS => {
			'NOT' => 39,
			'LITERAL' => 265,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"{" => 30,
			'COMMA' => 267,
			"(" => 55,
			"\${" => 38
		},
		DEFAULT => -169,
		GOTOS => {
			'expr' => 266,
			'sterm' => 70,
			'item' => 263,
			'param' => 264,
			'node' => 23,
			'ident' => 262,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 259
		DEFAULT => -174
	},
	{#State 260
		DEFAULT => -172
	},
	{#State 261
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'COMMA' => 267,
			'LITERAL' => 265,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			")" => 302,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 266,
			'sterm' => 70,
			'item' => 263,
			'param' => 264,
			'node' => 23,
			'ident' => 262,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 262
		ACTIONS => {
			'DOT' => 106,
			'ASSIGN' => 303
		},
		DEFAULT => -116
	},
	{#State 263
		ACTIONS => {
			"(" => 141,
			'ASSIGN' => 217
		},
		DEFAULT => -135
	},
	{#State 264
		DEFAULT => -160
	},
	{#State 265
		ACTIONS => {
			'ASSIGN' => 220
		},
		DEFAULT => -119
	},
	{#State 266
		ACTIONS => {
			"+" => 163,
			'CAT' => 169,
			'CMPOP' => 170,
			"?" => 164,
			'DIV' => 165,
			'MOD' => 171,
			"/" => 172,
			'AND' => 166,
			'BINOP' => 167,
			'OR' => 168
		},
		DEFAULT => -159
	},
	{#State 267
		DEFAULT => -162
	},
	{#State 268
		DEFAULT => -124
	},
	{#State 269
		ACTIONS => {
			";" => 304
		}
	},
	{#State 270
		ACTIONS => {
			'END' => 305
		}
	},
	{#State 271
		ACTIONS => {
			";" => 307,
			'DEFAULT' => 308,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'filename' => 306
		}
	},
	{#State 272
		ACTIONS => {
			'END' => 309
		}
	},
	{#State 273
		DEFAULT => -109
	},
	{#State 274
		DEFAULT => -107
	},
	{#State 275
		ACTIONS => {
			'TEXT' => 310
		}
	},
	{#State 276
		ACTIONS => {
			'END' => 311
		}
	},
	{#State 277
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 312,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 278
		ACTIONS => {
			'IDENT' => -103,
			")" => -103,
			'COMMA' => -103
		},
		DEFAULT => -137
	},
	{#State 279
		ACTIONS => {
			'COMMA' => 315,
			'IDENT' => 313,
			")" => 314
		}
	},
	{#State 280
		DEFAULT => -163,
		GOTOS => {
			'args' => 316
		}
	},
	{#State 281
		DEFAULT => -163,
		GOTOS => {
			'args' => 317
		}
	},
	{#State 282
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 318,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 283
		DEFAULT => -164
	},
	{#State 284
		ACTIONS => {
			'END' => 319
		}
	},
	{#State 285
		ACTIONS => {
			'ASSIGN' => -167
		},
		DEFAULT => -174
	},
	{#State 286
		ACTIONS => {
			'END' => 320
		}
	},
	{#State 287
		ACTIONS => {
			'DIV' => 165,
			'AND' => 166,
			'BINOP' => 167,
			'OR' => 168,
			"+" => 163,
			'CAT' => 169,
			'CMPOP' => 170,
			"?" => 164,
			'MOD' => 171,
			"/" => 172
		},
		DEFAULT => -131
	},
	{#State 288
		ACTIONS => {
			'DIV' => 165,
			'AND' => 166,
			'BINOP' => 167,
			'OR' => 168,
			"+" => 163,
			'CAT' => 169,
			'CMPOP' => 170,
			"?" => 164,
			'MOD' => 171,
			"/" => 172
		},
		DEFAULT => -130
	},
	{#State 289
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 321,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 290
		ACTIONS => {
			'DOT' => 106
		},
		DEFAULT => -12
	},
	{#State 291
		DEFAULT => -10
	},
	{#State 292
		DEFAULT => -136
	},
	{#State 293
		ACTIONS => {
			'END' => 322
		}
	},
	{#State 294
		ACTIONS => {
			'ELSIF' => 301,
			'ELSE' => 299
		},
		DEFAULT => -57,
		GOTOS => {
			'else' => 323
		}
	},
	{#State 295
		ACTIONS => {
			'CASE' => 324
		},
		DEFAULT => -62,
		GOTOS => {
			'case' => 325
		}
	},
	{#State 296
		ACTIONS => {
			'END' => 326
		}
	},
	{#State 297
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 327,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 298
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 328,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 299
		ACTIONS => {
			";" => 329
		}
	},
	{#State 300
		ACTIONS => {
			'END' => 330
		}
	},
	{#State 301
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 331,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 302
		DEFAULT => -171
	},
	{#State 303
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 332,
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 304
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 333,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 305
		DEFAULT => -74
	},
	{#State 306
		ACTIONS => {
			'DOT' => 180,
			";" => 334
		}
	},
	{#State 307
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 335,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 308
		ACTIONS => {
			";" => 336
		}
	},
	{#State 309
		DEFAULT => -86
	},
	{#State 310
		ACTIONS => {
			"\"" => 337
		}
	},
	{#State 311
		DEFAULT => -89
	},
	{#State 312
		ACTIONS => {
			'END' => 338
		}
	},
	{#State 313
		DEFAULT => -101
	},
	{#State 314
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'WRAPPER' => 57,
			'FOR' => 21,
			'NEXT' => 22,
			'LITERAL' => 59,
			"\"" => 62,
			'PROCESS' => 63,
			'FILTER' => 25,
			'RETURN' => 66,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 200,
			'DEFAULT' => 71,
			"{" => 30,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'term' => 60,
			'loop' => 4,
			'expr' => 206,
			'wrapper' => 47,
			'atomexpr' => 49,
			'atomdir' => 12,
			'mdir' => 339,
			'filter' => 29,
			'sterm' => 70,
			'ident' => 155,
			'perl' => 31,
			'setlist' => 73,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'directive' => 203,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 315
		DEFAULT => -102
	},
	{#State 316
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'COMMA' => 267,
			'LITERAL' => 265,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		DEFAULT => -69,
		GOTOS => {
			'expr' => 266,
			'sterm' => 70,
			'item' => 263,
			'param' => 264,
			'node' => 23,
			'ident' => 262,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 317
		ACTIONS => {
			'NOT' => 39,
			"{" => 30,
			'COMMA' => 267,
			'LITERAL' => 265,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 55,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		DEFAULT => -70,
		GOTOS => {
			'expr' => 266,
			'sterm' => 70,
			'item' => 263,
			'param' => 264,
			'node' => 23,
			'ident' => 262,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 318
		ACTIONS => {
			'END' => 340
		}
	},
	{#State 319
		DEFAULT => -87
	},
	{#State 320
		DEFAULT => -95
	},
	{#State 321
		ACTIONS => {
			'END' => 341
		}
	},
	{#State 322
		DEFAULT => -84
	},
	{#State 323
		ACTIONS => {
			'END' => 342
		}
	},
	{#State 324
		ACTIONS => {
			";" => 343,
			'DEFAULT' => 345,
			"{" => 30,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 9,
			'NUMBER' => 26,
			'REF' => 27,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 70,
			'item' => 40,
			'node' => 23,
			'ident' => 79,
			'term' => 344,
			'lterm' => 58
		}
	},
	{#State 325
		ACTIONS => {
			'END' => 346
		}
	},
	{#State 326
		DEFAULT => -72
	},
	{#State 327
		ACTIONS => {
			'DIV' => 165,
			'AND' => 166,
			'BINOP' => 167,
			'OR' => 168,
			"+" => 163,
			'CAT' => 169,
			'CMPOP' => 170,
			"?" => 164,
			'MOD' => 171,
			"/" => 172
		},
		DEFAULT => -150
	},
	{#State 328
		ACTIONS => {
			'END' => 347
		}
	},
	{#State 329
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 348,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 330
		DEFAULT => -53
	},
	{#State 331
		ACTIONS => {
			'CMPOP' => 170,
			"?" => 164,
			";" => 349,
			"+" => 163,
			'MOD' => 171,
			'DIV' => 165,
			"/" => 172,
			'AND' => 166,
			'CAT' => 169,
			'BINOP' => 167,
			'OR' => 168
		}
	},
	{#State 332
		ACTIONS => {
			"+" => 163,
			'CAT' => 169,
			'CMPOP' => 170,
			"?" => 164,
			'DIV' => 165,
			'MOD' => 171,
			"/" => 172,
			'AND' => 166,
			'BINOP' => 167,
			'OR' => 168
		},
		DEFAULT => -161
	},
	{#State 333
		DEFAULT => -78
	},
	{#State 334
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 350,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 335
		ACTIONS => {
			'FINAL' => 269,
			'CATCH' => 271
		},
		DEFAULT => -79,
		GOTOS => {
			'final' => 351
		}
	},
	{#State 336
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 352,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 337
		DEFAULT => -108
	},
	{#State 338
		DEFAULT => -100
	},
	{#State 339
		DEFAULT => -97
	},
	{#State 340
		DEFAULT => -64
	},
	{#State 341
		DEFAULT => -82
	},
	{#State 342
		DEFAULT => -51
	},
	{#State 343
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 353,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 344
		ACTIONS => {
			";" => 354
		}
	},
	{#State 345
		ACTIONS => {
			";" => 355
		}
	},
	{#State 346
		DEFAULT => -58
	},
	{#State 347
		DEFAULT => -67
	},
	{#State 348
		DEFAULT => -56
	},
	{#State 349
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 356,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 350
		ACTIONS => {
			'FINAL' => 269,
			'CATCH' => 271
		},
		DEFAULT => -79,
		GOTOS => {
			'final' => 357
		}
	},
	{#State 351
		DEFAULT => -77
	},
	{#State 352
		ACTIONS => {
			'FINAL' => 269,
			'CATCH' => 271
		},
		DEFAULT => -79,
		GOTOS => {
			'final' => 358
		}
	},
	{#State 353
		DEFAULT => -61
	},
	{#State 354
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 359,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 355
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 3,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 6,
			'CALL' => 46,
			'THROW' => 8,
			'GET' => 48,
			"[" => 9,
			'TRY' => 10,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 13,
			'META' => 15,
			'INCLUDE' => 17,
			"(" => 55,
			'SWITCH' => 56,
			'MACRO' => 18,
			'WRAPPER' => 57,
			";" => -25,
			'FOR' => 21,
			'LITERAL' => 59,
			'NEXT' => 22,
			"\"" => 62,
			'TEXT' => 24,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 25,
			'INSERT' => 67,
			'NUMBER' => 26,
			'REF' => 27,
			'WHILE' => 69,
			'BLOCK' => 28,
			'DEFAULT' => 71,
			"{" => 30,
			'USE' => 32,
			'VIEW' => 36,
			"\${" => 38
		},
		DEFAULT => -7,
		GOTOS => {
			'item' => 40,
			'node' => 23,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 4,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 5,
			'view' => 7,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 11,
			'defblock' => 68,
			'atomdir' => 12,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 14,
			'filter' => 29,
			'ident' => 16,
			'perl' => 31,
			'setlist' => 73,
			'chunks' => 191,
			'try' => 35,
			'switch' => 34,
			'assign' => 19,
			'block' => 360,
			'directive' => 74,
			'macro' => 20,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 356
		ACTIONS => {
			'ELSIF' => 301,
			'ELSE' => 299
		},
		DEFAULT => -57,
		GOTOS => {
			'else' => 361
		}
	},
	{#State 357
		DEFAULT => -75
	},
	{#State 358
		DEFAULT => -76
	},
	{#State 359
		ACTIONS => {
			'CASE' => 324
		},
		DEFAULT => -62,
		GOTOS => {
			'case' => 362
		}
	},
	{#State 360
		DEFAULT => -60
	},
	{#State 361
		DEFAULT => -55
	},
	{#State 362
		DEFAULT => -59
	}
]; 


#========================================================================
# Rules
#========================================================================

$RULES = [
	[#Rule 0
		 '$start', 2, undef
	],
	[#Rule 1
		 'template', 1,
sub
#line 66 "Parser.yp"
{ $factory->template(
                                      "\$output=\$context->event_back()->{output};\n".$_[1]) }
	],
	[#Rule 2
		 'eventblock', 1,
sub
#line 70 "Parser.yp"
{ $factory->block([ @{$_[1]}, 
                                      $factory->event_finalize ])         }
	],
	[#Rule 3
		 'eventblock', 2,
sub
#line 72 "Parser.yp"
{ $factory->block([ @{$_[1]}, $_[2] ])}
	],
	[#Rule 4
		 'eventblock', 1,
sub
#line 73 "Parser.yp"
{ $factory->block( @$_[2] )           }
	],
	[#Rule 5
		 'eventblock', 0,
sub
#line 74 "Parser.yp"
{ $factory->block(
                                     [ $factory->event_finalize ])        }
	],
	[#Rule 6
		 'block', 1,
sub
#line 78 "Parser.yp"
{ $factory->block($_[1])              }
	],
	[#Rule 7
		 'block', 0,
sub
#line 79 "Parser.yp"
{ $factory->block()                   }
	],
	[#Rule 8
		 'chunks', 2,
sub
#line 82 "Parser.yp"
{ push(@{$_[1]}, $_[2]) 
                                        if defined $_[2]; $_[1]           }
	],
	[#Rule 9
		 'chunks', 1,
sub
#line 84 "Parser.yp"
{ defined $_[1] ? [ $_[1] ] : [ ]     }
	],
	[#Rule 10
		 'event', 4,
sub
#line 88 "Parser.yp"
{ $_[0]->location() .
                                      $factory->define_event($_[2], $_[4]) }
	],
	[#Rule 11
		 'eventvar', 1,
sub
#line 91 "Parser.yp"
{ [ undef, $factory->ident($_[1]) ]   }
	],
	[#Rule 12
		 'eventvar', 3,
sub
#line 92 "Parser.yp"
{ [ $_[1], $factory->ident($_[3]) ]   }
	],
	[#Rule 13
		 'chunk', 1,
sub
#line 95 "Parser.yp"
{ $factory->textblock($_[1])          }
	],
	[#Rule 14
		 'chunk', 2,
sub
#line 96 "Parser.yp"
{ return '' unless $_[1];
                                      $_[0]->location() . $_[1];
                                    }
	],
	[#Rule 15
		 'statement', 1, undef
	],
	[#Rule 16
		 'statement', 1, undef
	],
	[#Rule 17
		 'statement', 1, undef
	],
	[#Rule 18
		 'statement', 1, undef
	],
	[#Rule 19
		 'statement', 1, undef
	],
	[#Rule 20
		 'statement', 1, undef
	],
	[#Rule 21
		 'statement', 1, undef
	],
	[#Rule 22
		 'statement', 1, undef
	],
	[#Rule 23
		 'statement', 1,
sub
#line 109 "Parser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 24
		 'statement', 2,
sub
#line 110 "Parser.yp"
{ $_[0]->add_metadata($_[2]);         }
	],
	[#Rule 25
		 'statement', 0, undef
	],
	[#Rule 26
		 'directive', 1,
sub
#line 114 "Parser.yp"
{ $factory->set($_[1])                }
	],
	[#Rule 27
		 'directive', 1, undef
	],
	[#Rule 28
		 'directive', 1, undef
	],
	[#Rule 29
		 'directive', 1, undef
	],
	[#Rule 30
		 'directive', 1, undef
	],
	[#Rule 31
		 'directive', 1, undef
	],
	[#Rule 32
		 'directive', 1, undef
	],
	[#Rule 33
		 'atomexpr', 1,
sub
#line 128 "Parser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 34
		 'atomexpr', 1, undef
	],
	[#Rule 35
		 'atomdir', 2,
sub
#line 132 "Parser.yp"
{ $factory->get($_[2])                }
	],
	[#Rule 36
		 'atomdir', 2,
sub
#line 133 "Parser.yp"
{ $factory->call($_[2])               }
	],
	[#Rule 37
		 'atomdir', 2,
sub
#line 134 "Parser.yp"
{ $factory->set($_[2])                }
	],
	[#Rule 38
		 'atomdir', 2,
sub
#line 135 "Parser.yp"
{ $factory->default($_[2])            }
	],
	[#Rule 39
		 'atomdir', 2,
sub
#line 136 "Parser.yp"
{ $factory->insert($_[2])             }
	],
	[#Rule 40
		 'atomdir', 2,
sub
#line 137 "Parser.yp"
{ $factory->include($_[2])            }
	],
	[#Rule 41
		 'atomdir', 2,
sub
#line 138 "Parser.yp"
{ $factory->process($_[2])            }
	],
	[#Rule 42
		 'atomdir', 2,
sub
#line 139 "Parser.yp"
{ $factory->throw($_[2])              }
	],
	[#Rule 43
		 'atomdir', 1,
sub
#line 140 "Parser.yp"
{ $factory->return()                  }
	],
	[#Rule 44
		 'atomdir', 1,
sub
#line 141 "Parser.yp"
{ $factory->stop()                    }
	],
	[#Rule 45
		 'atomdir', 1,
sub
#line 142 "Parser.yp"
{ "\$output = '';";                   }
	],
	[#Rule 46
		 'atomdir', 1,
sub
#line 143 "Parser.yp"
{ $_[0]->block_label('last ', ';')    }
	],
	[#Rule 47
		 'atomdir', 1,
sub
#line 144 "Parser.yp"
{ $_[0]->in_block('FOR')
                                        ? $factory->next($_[0]->block_label)
                                        : $_[0]->block_label('next ', ';') }
	],
	[#Rule 48
		 'atomdir', 2,
sub
#line 147 "Parser.yp"
{ if ($_[2]->[0]->[0] =~ /^'(on|off)'$/) {
                                          $_[0]->{ DEBUG_DIRS } = ($1 eq 'on');
                                          $factory->debug($_[2]);
                                      }
                                      else {
                                          $_[0]->{ DEBUG_DIRS } ? $factory->debug($_[2]) : '';
                                      }
                                    }
	],
	[#Rule 49
		 'atomdir', 1, undef
	],
	[#Rule 50
		 'atomdir', 1, undef
	],
	[#Rule 51
		 'condition', 6,
sub
#line 160 "Parser.yp"
{ $factory->if(@_[2, 4, 5])           }
	],
	[#Rule 52
		 'condition', 3,
sub
#line 161 "Parser.yp"
{ $factory->if(@_[3, 1])              }
	],
	[#Rule 53
		 'condition', 6,
sub
#line 163 "Parser.yp"
{ $factory->if("!($_[2])", @_[4, 5])  }
	],
	[#Rule 54
		 'condition', 3,
sub
#line 164 "Parser.yp"
{ $factory->if("!($_[3])", $_[1])     }
	],
	[#Rule 55
		 'else', 5,
sub
#line 168 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]);
                                      $_[5];                              }
	],
	[#Rule 56
		 'else', 3,
sub
#line 170 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 57
		 'else', 0,
sub
#line 171 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 58
		 'switch', 6,
sub
#line 175 "Parser.yp"
{ $factory->switch(@_[2, 5])          }
	],
	[#Rule 59
		 'case', 5,
sub
#line 179 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]); 
                                      $_[5];                              }
	],
	[#Rule 60
		 'case', 4,
sub
#line 181 "Parser.yp"
{ [ $_[4] ]                           }
	],
	[#Rule 61
		 'case', 3,
sub
#line 182 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 62
		 'case', 0,
sub
#line 183 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 63
		 '@1-3', 0,
sub
#line 186 "Parser.yp"
{ $_[0]->enter_block('FOR')           }
	],
	[#Rule 64
		 'loop', 6,
sub
#line 187 "Parser.yp"
{ $factory->foreach(@{$_[2]}, $_[5], $_[0]->leave_block)  }
	],
	[#Rule 65
		 'loop', 3,
sub
#line 188 "Parser.yp"
{ $factory->foreach(@{$_[3]}, $_[1])  }
	],
	[#Rule 66
		 '@2-3', 0,
sub
#line 189 "Parser.yp"
{ $_[0]->enter_block('WHILE')         }
	],
	[#Rule 67
		 'loop', 6,
sub
#line 190 "Parser.yp"
{ $factory->while(@_[2, 5], $_[0]->leave_block) }
	],
	[#Rule 68
		 'loop', 3,
sub
#line 191 "Parser.yp"
{ $factory->while(@_[3, 1]) }
	],
	[#Rule 69
		 'loopvar', 4,
sub
#line 194 "Parser.yp"
{ [ @_[1, 3, 4] ]                     }
	],
	[#Rule 70
		 'loopvar', 4,
sub
#line 195 "Parser.yp"
{ [ @_[1, 3, 4] ]                     }
	],
	[#Rule 71
		 'loopvar', 2,
sub
#line 196 "Parser.yp"
{ [ 0, @_[1, 2] ]                     }
	],
	[#Rule 72
		 'wrapper', 5,
sub
#line 200 "Parser.yp"
{ $factory->wrapper(@_[2, 4])         }
	],
	[#Rule 73
		 'wrapper', 3,
sub
#line 202 "Parser.yp"
{ $factory->wrapper(@_[3, 1])         }
	],
	[#Rule 74
		 'try', 5,
sub
#line 206 "Parser.yp"
{ $factory->try(@_[3, 4])             }
	],
	[#Rule 75
		 'final', 5,
sub
#line 210 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2,4] ]);
                                      $_[5];                              }
	],
	[#Rule 76
		 'final', 5,
sub
#line 213 "Parser.yp"
{ unshift(@{$_[5]}, [ undef, $_[4] ]);
                                      $_[5];                              }
	],
	[#Rule 77
		 'final', 4,
sub
#line 216 "Parser.yp"
{ unshift(@{$_[4]}, [ undef, $_[3] ]);
                                      $_[4];                              }
	],
	[#Rule 78
		 'final', 3,
sub
#line 218 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 79
		 'final', 0,
sub
#line 219 "Parser.yp"
{ [ 0 ] }
	],
	[#Rule 80
		 'use', 2,
sub
#line 222 "Parser.yp"
{ $factory->use($_[2])                }
	],
	[#Rule 81
		 '@3-3', 0,
sub
#line 225 "Parser.yp"
{ $_[0]->push_defblock();             }
	],
	[#Rule 82
		 'view', 6,
sub
#line 226 "Parser.yp"
{ $factory->view(@_[2,5], 
                                                     $_[0]->pop_defblock) }
	],
	[#Rule 83
		 '@4-2', 0,
sub
#line 230 "Parser.yp"
{ ${$_[0]->{ INPERL }}++;             }
	],
	[#Rule 84
		 'perl', 5,
sub
#line 231 "Parser.yp"
{ ${$_[0]->{ INPERL }}--;
                                      $_[0]->{ EVAL_PERL } 
                                      ? $factory->perl($_[4])             
                                      : $factory->no_perl();              }
	],
	[#Rule 85
		 '@5-1', 0,
sub
#line 237 "Parser.yp"
{ ${$_[0]->{ INPERL }}++; 
                                      $rawstart = ${$_[0]->{'LINE'}};     }
	],
	[#Rule 86
		 'rawperl', 5,
sub
#line 239 "Parser.yp"
{ ${$_[0]->{ INPERL }}--;
                                      $_[0]->{ EVAL_PERL } 
                                      ? $factory->rawperl($_[4], $rawstart)
                                      : $factory->no_perl();              }
	],
	[#Rule 87
		 'filter', 5,
sub
#line 246 "Parser.yp"
{ $factory->filter(@_[2,4])           }
	],
	[#Rule 88
		 'filter', 3,
sub
#line 248 "Parser.yp"
{ $factory->filter(@_[3,1])           }
	],
	[#Rule 89
		 'defblock', 5,
sub
#line 253 "Parser.yp"
{ my $name = join('/', @{ $_[0]->{ DEFBLOCKS } });
                                      pop(@{ $_[0]->{ DEFBLOCKS } });
                                      $_[0]->define_block($name, $_[4]); 
                                      undef
                                    }
	],
	[#Rule 90
		 'defblockname', 2,
sub
#line 260 "Parser.yp"
{ push(@{ $_[0]->{ DEFBLOCKS } }, $_[2]);
                                      $_[2];
                                    }
	],
	[#Rule 91
		 'blockname', 1, undef
	],
	[#Rule 92
		 'blockname', 1,
sub
#line 266 "Parser.yp"
{ $_[1] =~ s/^'(.*)'$/$1/; $_[1]      }
	],
	[#Rule 93
		 'blockargs', 1, undef
	],
	[#Rule 94
		 'blockargs', 0, undef
	],
	[#Rule 95
		 'anonblock', 5,
sub
#line 274 "Parser.yp"
{ local $" = ', ';
                                      print STDERR "experimental block args: [@{ $_[2] }]\n"
                                          if $_[2];
                                      $factory->anon_block($_[4])         }
	],
	[#Rule 96
		 'capture', 3,
sub
#line 280 "Parser.yp"
{ $factory->capture(@_[1, 3])         }
	],
	[#Rule 97
		 'macro', 6,
sub
#line 284 "Parser.yp"
{ $factory->macro(@_[2, 6, 4])        }
	],
	[#Rule 98
		 'macro', 3,
sub
#line 285 "Parser.yp"
{ $factory->macro(@_[2, 3])           }
	],
	[#Rule 99
		 'mdir', 1, undef
	],
	[#Rule 100
		 'mdir', 4,
sub
#line 289 "Parser.yp"
{ $_[3]                               }
	],
	[#Rule 101
		 'margs', 2,
sub
#line 292 "Parser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 102
		 'margs', 2,
sub
#line 293 "Parser.yp"
{ $_[1]                               }
	],
	[#Rule 103
		 'margs', 1,
sub
#line 294 "Parser.yp"
{ [ $_[1] ]                           }
	],
	[#Rule 104
		 'metadata', 2,
sub
#line 297 "Parser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 105
		 'metadata', 2, undef
	],
	[#Rule 106
		 'metadata', 1, undef
	],
	[#Rule 107
		 'meta', 3,
sub
#line 302 "Parser.yp"
{ for ($_[3]) { s/^'//; s/'$//; 
                                                       s/\\'/'/g  }; 
                                         [ @_[1,3] ] }
	],
	[#Rule 108
		 'meta', 5,
sub
#line 305 "Parser.yp"
{ [ @_[1,4] ] }
	],
	[#Rule 109
		 'meta', 3,
sub
#line 306 "Parser.yp"
{ [ @_[1,3] ] }
	],
	[#Rule 110
		 'term', 1, undef
	],
	[#Rule 111
		 'term', 1, undef
	],
	[#Rule 112
		 'lterm', 3,
sub
#line 318 "Parser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 113
		 'lterm', 3,
sub
#line 319 "Parser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 114
		 'lterm', 2,
sub
#line 320 "Parser.yp"
{ "[ ]"                               }
	],
	[#Rule 115
		 'lterm', 3,
sub
#line 321 "Parser.yp"
{ "{ $_[2]  }"                        }
	],
	[#Rule 116
		 'sterm', 1,
sub
#line 324 "Parser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 117
		 'sterm', 2,
sub
#line 325 "Parser.yp"
{ $factory->identref($_[2])           }
	],
	[#Rule 118
		 'sterm', 3,
sub
#line 326 "Parser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 119
		 'sterm', 1, undef
	],
	[#Rule 120
		 'sterm', 1, undef
	],
	[#Rule 121
		 'list', 2,
sub
#line 331 "Parser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 122
		 'list', 2, undef
	],
	[#Rule 123
		 'list', 1, undef
	],
	[#Rule 124
		 'range', 3,
sub
#line 336 "Parser.yp"
{ $_[1] . '..' . $_[3]                }
	],
	[#Rule 125
		 'hash', 1, undef
	],
	[#Rule 126
		 'hash', 0,
sub
#line 341 "Parser.yp"
{ "" }
	],
	[#Rule 127
		 'params', 2,
sub
#line 344 "Parser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 128
		 'params', 2, undef
	],
	[#Rule 129
		 'params', 1, undef
	],
	[#Rule 130
		 'param', 3,
sub
#line 349 "Parser.yp"
{ "$_[1] => $_[3]"                    }
	],
	[#Rule 131
		 'param', 3,
sub
#line 350 "Parser.yp"
{ "$_[1] => $_[3]"                    }
	],
	[#Rule 132
		 'ident', 3,
sub
#line 353 "Parser.yp"
{ push(@{$_[1]}, @{$_[3]}); $_[1]     }
	],
	[#Rule 133
		 'ident', 3,
sub
#line 354 "Parser.yp"
{ push(@{$_[1]}, 
                                           map {($_, 0)} split(/\./, $_[3]));
                                      $_[1];                              }
	],
	[#Rule 134
		 'ident', 1, undef
	],
	[#Rule 135
		 'node', 1,
sub
#line 360 "Parser.yp"
{ [ $_[1], 0 ]                        }
	],
	[#Rule 136
		 'node', 4,
sub
#line 361 "Parser.yp"
{ [ $_[1], $factory->args($_[3]) ]    }
	],
	[#Rule 137
		 'item', 1,
sub
#line 364 "Parser.yp"
{ "'$_[1]'"                           }
	],
	[#Rule 138
		 'item', 3,
sub
#line 365 "Parser.yp"
{ $_[2]                               }
	],
	[#Rule 139
		 'item', 2,
sub
#line 366 "Parser.yp"
{ $_[0]->{ V1DOLLAR }
                                       ? "'$_[2]'" 
                                       : $factory->ident(["'$_[2]'", 0])  }
	],
	[#Rule 140
		 'expr', 3,
sub
#line 371 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 141
		 'expr', 3,
sub
#line 372 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 142
		 'expr', 3,
sub
#line 373 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 143
		 'expr', 3,
sub
#line 374 "Parser.yp"
{ "int($_[1] / $_[3])"                }
	],
	[#Rule 144
		 'expr', 3,
sub
#line 375 "Parser.yp"
{ "$_[1] % $_[3]"                     }
	],
	[#Rule 145
		 'expr', 3,
sub
#line 376 "Parser.yp"
{ "$_[1] $CMPOP{ $_[2] } $_[3]"       }
	],
	[#Rule 146
		 'expr', 3,
sub
#line 377 "Parser.yp"
{ "$_[1]  . $_[3]"                    }
	],
	[#Rule 147
		 'expr', 3,
sub
#line 378 "Parser.yp"
{ "$_[1] && $_[3]"                    }
	],
	[#Rule 148
		 'expr', 3,
sub
#line 379 "Parser.yp"
{ "$_[1] || $_[3]"                    }
	],
	[#Rule 149
		 'expr', 2,
sub
#line 380 "Parser.yp"
{ "! $_[2]"                           }
	],
	[#Rule 150
		 'expr', 5,
sub
#line 381 "Parser.yp"
{ "$_[1] ? $_[3] : $_[5]"             }
	],
	[#Rule 151
		 'expr', 3,
sub
#line 382 "Parser.yp"
{ $factory->assign(@{$_[2]})          }
	],
	[#Rule 152
		 'expr', 3,
sub
#line 383 "Parser.yp"
{ "($_[2])"                           }
	],
	[#Rule 153
		 'expr', 1, undef
	],
	[#Rule 154
		 'setlist', 2,
sub
#line 387 "Parser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 155
		 'setlist', 2, undef
	],
	[#Rule 156
		 'setlist', 1, undef
	],
	[#Rule 157
		 'assign', 3,
sub
#line 393 "Parser.yp"
{ [ $_[1], $_[3] ]                    }
	],
	[#Rule 158
		 'assign', 3,
sub
#line 394 "Parser.yp"
{ [ @_[1,3] ]                         }
	],
	[#Rule 159
		 'args', 2,
sub
#line 401 "Parser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 160
		 'args', 2,
sub
#line 402 "Parser.yp"
{ push(@{$_[1]->[0]}, $_[2]); $_[1]   }
	],
	[#Rule 161
		 'args', 4,
sub
#line 403 "Parser.yp"
{ push(@{$_[1]->[0]}, "'', " . 
                                      $factory->assign(@_[2,4])); $_[1]  }
	],
	[#Rule 162
		 'args', 2,
sub
#line 405 "Parser.yp"
{ $_[1]                               }
	],
	[#Rule 163
		 'args', 0,
sub
#line 406 "Parser.yp"
{ [ [ ] ]                             }
	],
	[#Rule 164
		 'lnameargs', 3,
sub
#line 416 "Parser.yp"
{ push(@{$_[3]}, $_[1]); $_[3]        }
	],
	[#Rule 165
		 'lnameargs', 1, undef
	],
	[#Rule 166
		 'lvalue', 1, undef
	],
	[#Rule 167
		 'lvalue', 3,
sub
#line 421 "Parser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 168
		 'lvalue', 1, undef
	],
	[#Rule 169
		 'nameargs', 3,
sub
#line 425 "Parser.yp"
{ [ [$factory->ident($_[2])], $_[3] ]   }
	],
	[#Rule 170
		 'nameargs', 2,
sub
#line 426 "Parser.yp"
{ [ @_[1,2] ] }
	],
	[#Rule 171
		 'nameargs', 4,
sub
#line 427 "Parser.yp"
{ [ @_[1,3] ] }
	],
	[#Rule 172
		 'names', 3,
sub
#line 430 "Parser.yp"
{ push(@{$_[1]}, $_[3]); $_[1] }
	],
	[#Rule 173
		 'names', 1,
sub
#line 431 "Parser.yp"
{ [ $_[1] ]                    }
	],
	[#Rule 174
		 'name', 3,
sub
#line 434 "Parser.yp"
{ $factory->quoted($_[2])  }
	],
	[#Rule 175
		 'name', 1,
sub
#line 435 "Parser.yp"
{ "'$_[1]'" }
	],
	[#Rule 176
		 'name', 1, undef
	],
	[#Rule 177
		 'filename', 3,
sub
#line 439 "Parser.yp"
{ "$_[1].$_[3]" }
	],
	[#Rule 178
		 'filename', 1, undef
	],
	[#Rule 179
		 'filepart', 1, undef
	],
	[#Rule 180
		 'filepart', 1, undef
	],
	[#Rule 181
		 'filepart', 1, undef
	],
	[#Rule 182
		 'quoted', 2,
sub
#line 453 "Parser.yp"
{ push(@{$_[1]}, $_[2]) 
                                          if defined $_[2]; $_[1]         }
	],
	[#Rule 183
		 'quoted', 0,
sub
#line 455 "Parser.yp"
{ [ ]                                 }
	],
	[#Rule 184
		 'quotable', 1,
sub
#line 458 "Parser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 185
		 'quotable', 1,
sub
#line 459 "Parser.yp"
{ $factory->text($_[1])               }
	],
	[#Rule 186
		 'quotable', 1,
sub
#line 460 "Parser.yp"
{ undef                               }
	]
];



1;

__END__

=head1 NAME

Template::Grammar - Parser state/rule tables for the TT grammar

=head1 SYNOPSIS

    # no user serviceable parts inside

=head1 DESCRIPTION

This module defines the state and rule tables that the L<Template::Parser>
module uses to parse templates.  It is generated from a YACC-like grammar
using the C<Parse::Yapp> module.  The F<parser> sub-directory of the 
Template Toolkit source distribution contains the grammar and other 
files required to generate this module.

But you don't need to worry about any of that unless you're planning to 
modify the Template Toolkit language.

=head1 AUTHOR

Andy Wardley E<lt>abw@wardley.orgE<gt>

L<http://wardley.org/>

=head1 COPYRIGHT

Copyright (C) 1996-2007 Andy Wardley.  All Rights Reserved.

This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.

=head1 SEE ALSO

L<Template::Parser>

=cut

# Local Variables:
# mode: perl
# perl-indent-level: 4
# indent-tabs-mode: nil
# End:
#
# vim: expandtab shiftwidth=4:










